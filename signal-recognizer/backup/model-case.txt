        "def model_a():\n",
        "  model = Sequential()\n",
        "  model.add(Conv1D(filters=10, kernel_size=16, strides=1, padding='same', activation='relu', input_shape=(2, capture_size)))\n",
        "  model.add(MaxPooling1D(pool_size=10, strides=2, padding='same'))\n",
        "  model.add(Conv1D(filters=10, kernel_size=12, strides=1, padding='same', activation='relu', input_shape=(6, int(capture_size / 2))))\n",
        "  model.add(MaxPooling1D(pool_size=10, strides=2, padding='same'))\n",
        "  model.add(Conv1D(filters=10, kernel_size=6, strides=1, padding='same', activation='relu', input_shape=(6, int(capture_size / 4))))\n",
        "  model.add(MaxPooling1D(pool_size=10, strides=2, padding='same'))\n",
        "  model.add(Conv1D(filters=10, kernel_size=3, strides=1, padding='same', activation='relu', input_shape=(6, int(capture_size / 8))))\n",
        "  model.add(MaxPooling1D(pool_size=10, strides=2, padding='same'))\n",
        "  model.add(Dense(2, activation='softmax'))\n",
        "  model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])\n",
        "  return model\n",
  
  
  ---------------
  
  
              "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "conv1d_160 (Conv1D)          (None, 2, 10)             327690    \n",
            "_________________________________________________________________\n",
            "max_pooling1d_160 (MaxPoolin (None, 1, 10)             0         \n",
            "_________________________________________________________________\n",
            "conv1d_161 (Conv1D)          (None, 1, 10)             1210      \n",
            "_________________________________________________________________\n",
            "max_pooling1d_161 (MaxPoolin (None, 1, 10)             0         \n",
            "_________________________________________________________________\n",
            "conv1d_162 (Conv1D)          (None, 1, 10)             610       \n",
            "_________________________________________________________________\n",
            "max_pooling1d_162 (MaxPoolin (None, 1, 10)             0         \n",
            "_________________________________________________________________\n",
            "conv1d_163 (Conv1D)          (None, 1, 10)             310       \n",
            "_________________________________________________________________\n",
            "max_pooling1d_163 (MaxPoolin (None, 1, 10)             0         \n",
            "_________________________________________________________________\n",
            "dense_56 (Dense)             (None, 1, 2)              22        \n",
            "=================================================================\n",
            "Total params: 329,842\n",
            "Trainable params: 329,842\n",
            "Non-trainable params: 0\n",


            "2000/2000 [==============================] - 1s 532us/sample - loss: 0.2567 - accuracy: 0.8955 - val_loss: 0.5056 - val_accuracy: 0.7680\n",
            "Epoch 65/100\n",
            "2000/2000 [==============================] - 1s 511us/sample - loss: 0.2567 - accuracy: 0.8955 - val_loss: 0.5063 - val_accuracy: 0.7680\n",
            "Epoch 66/100\n",
            "2000/2000 [==============================] - 1s 513us/sample - loss: 0.2567 - accuracy: 0.8955 - val_loss: 0.5087 - val_accuracy: 0.7680\n",
            "Epoch 67/100\n",
            "2000/2000 [==============================] - 1s 512us/sample - loss: 0.2564 - accuracy: 0.8955 - val_loss: 0.5092 - val_accuracy: 0.7680\n",
            "Epoch 68/100\n",
            "2000/2000 [==============================] - 1s 506us/sample - loss: 0.2567 - accuracy: 0.8935 - val_loss: 0.5129 - val_accuracy: 0.7685\n",


